name: Continuous Integration Pipeline

env:
  # Set EXECUTION_ENVIRONMENT to CI
  EXECUTION_ENVIRONMENT: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
      verbosity:
        description: "Verbosity level"
        required: true
        default: "normal"
        type: choice
        options:
          - normal
          - high
          - extreme
          - nuts
      environment:
        description: "Environment to run tests against"
        type: environment
        required: true

jobs:
  minitwit_server_test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout action
        uses: actions/checkout@v2

      - name: set go env
        uses: actions/setup-go@v2
        with:
          go-version: "1.21"

      - name: Install dependencies and start minitwit server
        run: |
          cd go-minitwit
          go mod tidy
          go run *.go &
          sleep 60

      - name: set python env
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: install python dependencies
        run: |
          cd go-minitwit/tests/
          pip install -r requirements_tests.txt

      - name: check listening ports
        run: |
          netstat -tuln
          curl http://localhost:8081

      - name: run pipeline manual tests
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd go-minitwit/tests/
          pytest_cmd="pytest "
          if [ "${{ github.event.inputs.logLevel }}" != "warning" ]; then
            pytest_cmd+="--log-cli-level=${{ github.event.inputs.logLevel }} "
          fi
          if [ "${{ github.event.inputs.verbosity }}" == "high" ]; then
            pytest_cmd+="-v"
          elif [ "${{ github.event.inputs.verbosity }}" == "extreme" ]; then
            pytest_cmd+="-vv"
          elif [ "${{ github.event.inputs.verbosity }}" == "nuts" ]; then
            pytest_cmd+="-vvv"
          fi
          $pytest_cmd ./test_refactored_minitwit.py
          $pytest_cmd ./test_minitwit_sim_api.py

    #for the UI test, we need firefox and geckodriver
      - name: Install Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox

      - name: Install Geckodriver
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.32.0/geckodriver-v0.32.0-linux64.tar.gz
          tar -xvzf geckodriver-v0.32.0-linux64.tar.gz
          echo "hello!"
          ls
          echo "hello!"
          sudo mv geckodriver-v0.32.0-linux64/geckodriver /usr/local/bin/
          rm geckodriver-v0.32.0-linux64.tar.gz
          export PATH=$PATH:/usr/local/bin/


      - name: run pipeline standard tests
        if: github.event_name != 'workflow_dispatch'
        run: |
          cd go-minitwit/tests/
          pytest ./test_refactored_minitwit.py
          pytest ./test_minitwit_sim_api.py
          pytest ./test_itu_minitwit_ui.py
