version: "3.8"

networks:
  itu-minitwit-network:
    external: false
    name: itu-minitwit-network

services:
  minitwitimage:
    image: ${DOCKER_USERNAME}/minitwitimage
    container_name: minitwit
    command: ["dockerize", "-wait", "tcp://fluentd:24224", "-timeout", "60s", "/docker-gs-ping"]
    env_file:
      - .env
    networks:
      - itu-minitwit-network
      #- itusqlimage
    depends_on:
      fluentd:
        condition: service_started
      grafana:
        condition: service_started
      prometheus:
        condition: service_started
    ports:
      - "8081:8081"
    mem_limit: "1g"
    mem_reservation: "512m"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - itu-minitwit-network
    mem_limit: "1g"
    mem_reservation: "512m"

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - "3001:3000"
    networks:
      - itu-minitwit-network
    mem_limit: "1g"
    mem_reservation: "512m"
    volumes:
      - grafana_data:/var/lib/grafana #to no get erased

  node_exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - itu-minitwit-network

  fluentd:
    image: fluent/fluentd-kubernetes-daemonset:v1.16.2-debian-elasticsearch7-1.1
    container_name: fluentd
    networks:
      - itu-minitwit-network
    volumes:
      - ./fluentd/conf:/fluentd/etc # Mounts local Fluentd configuration directory to the container.
      - /var/log/fluentd/buffer:/fluentd/buffer # Bind mount the buffer directory
      - fluentd-log:/fluentd/log
    ports:
      - "24224:24224" # Exposes Fluentd port for TCP traffic.
      - "24224:24224/udp" # Exposes Fluentd port for UDP traffic.
    depends_on:
      elasticsearch:
        condition: service_healthy # Make Fluentd depend on Elasticsearch's health check.

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.17
    container_name: elasticsearch
    networks:
      - itu-minitwit-network # connects to network
    environment:
      - discovery.type=single-node # Configures Elasticsearch to run as a single-node cluster.
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data # Persists Elasticsearch data.
    ports:
      - "9200:9200" # Exposes Elasticsearch HTTP port for communications. Interation possible
    mem_limit: "1g"
    mem_reservation: "512m"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  kibana:
    image: kibana:7.17.17
    container_name: kibana
    networks:
      - itu-minitwit-network
    depends_on:
      - elasticsearch # Ensures that Kibana starts after Elasticsearch.
    ports:
      - "5601:5601"  # Exposes Kibana's web interface port.
    mem_limit: "1g"
    mem_reservation: "512m"

volumes:
  elasticsearch-data:
   driver: local
  fluentd-log:
   driver: local
  grafana_data:

